name       : firefox
version    : 114.0.1
release    : 279
source     :
    - https://ftp.mozilla.org/pub/firefox/releases/114.0.1/source/firefox-114.0.1.source.tar.xz : 7e4ebc13e8c94af06f703af2119cf1641d4186174a3d59b7812f9d28f61b7d18
    - https://sources.getsol.us/mozilla/firefox/firefox-114.0.1-langpacks.tar.xz : f9c00456ff53a32ec70f4d0cf177a676ec8511d652894397bb6b34c539dd29b7
license    :
    - GPL-2.0-or-later
    - MPL-2.0
component  : network.web.browser
summary    : Firefox web browser
description: |
    Mozilla Firefox is an open-source web browser, designed for standards compliance, performance and portability. Its functionality can be enhanced via a plethora of extensions.
clang      : yes
optimize   : icf-safe
builddeps  :
    - pkgconfig(alsa)
    - pkgconfig(bzip2)
    - pkgconfig(dbus-glib-1)
    - pkgconfig(gbm)
    - pkgconfig(gconf-2.0)
    - pkgconfig(gtk+-2.0)
    - pkgconfig(gtk+-3.0)
    - pkgconfig(libevent)
    - pkgconfig(libpulse)
    - pkgconfig(libturbojpeg)
    - pkgconfig(libva)
    - pkgconfig(libpci)
    - pkgconfig(xcomposite)
    - pkgconfig(xt)
    - autoconf213
    - cargo
    - cbindgen
    - dump_syms
    - llvm-clang
    - nodejs-devel
    - noto-sans-ttf
    - xorg-server-xvfb
    - yasm
rundeps    :
    - ffmpeg
environment: |
    export MOZ_NOSPAM=1
    export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system
    export MOZBUILD_STATE_PATH=$PWD
setup      : |
    %patch -p1 < $pkgfiles/firefox-enable-vaapi.patch

    cp $pkgfiles/{google-safebrowsing,mozilla}-api-key .
    cp $pkgfiles/config .mozconfig
    sed 's@\#\#JOBCOUNT\#\#@%JOBS%@' -i .mozconfig
    echo "ac_add_options --with-mozilla-api-keyfile=${workdir}/mozilla-api-key" >> .mozconfig
    echo "ac_add_options --with-google-safebrowsing-api-keyfile=${workdir}/google-safebrowsing-api-key" >> .mozconfig
    ./mach configure
build      : |
    # Instrument build
    echo "ac_add_options --enable-profile-generate=cross" >> .mozconfig
    ./mach build

    # Package and run automated benchmarks for profiling
    ./mach package
    LLVM_PROFDATA=llvm-profdata JARLOG_FILE="$PWD/jarlog" xvfb-run -s "-screen 0 1920x1080x24 -ac +extension GLX +render -noreset" \
    ./mach python build/pgo/profileserver.py

    # Clean for rebuild
    ./mach clobber

    # Profile use build and enable lto
    sed -i '/--enable-profile-generate=cross/d' .mozconfig
    echo "ac_add_options --enable-profile-use" >> .mozconfig
    echo "ac_add_options --with-pgo-profile-path=${PWD@Q}/merged.profdata" >> .mozconfig
    echo "ac_add_options --with-pgo-jarlog=${PWD@Q}/jarlog" >> .mozconfig
    ./mach build
    ./mach buildsymbols
install    : |
    # Install locales first
    langpackdir="$installdir/%libdir%/firefox/browser/extensions"
    install -D -d -m 00755 "${langpackdir}"

    tar xf "${sources}/firefox-${version}-langpacks.tar.xz"
    for i in ff_lang_pack/*.xpi; do
        lname="$(basename ${i})"
        install -Dm00644 "ff_lang_pack/${lname}" "${langpackdir}"/$lname
    done

    DESTDIR=$installdir ./mach install

    # Desktop file, icon, appdata
    install -Dm00644 $installdir/usr/lib/firefox/browser/chrome/icons/default/default128.png $installdir/usr/share/pixmaps/firefox.png
    install -Dm00644 $pkgfiles/firefox.desktop $installdir/usr/share/applications/firefox.desktop
    install -Dm00644 $pkgfiles/firefox.appdata.xml.in $installdir/usr/share/metainfo/firefox.appdata.xml

    # Use a wrapper script to launch in Wayland (temporarily disabled since this breaks default browser detection)
    # rm -v $installdir/usr/bin/firefox
    # install -D -m 00755 $pkgfiles/firefox-wrapper.sh $installdir/usr/bin/firefox

    # set up defaults
    mkdir -p $installdir/%libdir%/firefox/browser/defaults/preferences
    install -m00644 $pkgfiles/prefs.js $installdir/%libdir%/firefox/browser/defaults/preferences/prefs.js
    install -m00644 $pkgfiles/firefox-l10n.js $installdir/%libdir%/firefox/browser/defaults/preferences/firefox-l10n.js
